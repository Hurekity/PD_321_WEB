@page "/teachers/create"
@using Microsoft.EntityFrameworkCore
@using BlazorPD_321.Models
@inject IDbContextFactory<BlazorAppPD_212.Data.BlazorAppPD_212Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Teacher</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Teacher" OnValidSubmit="AddTeacher" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="worksince" class="form-label">WorkSince:</label> 
                <InputDate id="worksince" @bind-Value="Teacher.work_since" class="form-control" /> 
                <ValidationMessage For="() => Teacher.work_since" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastname" class="form-label">LastName:</label> 
                <InputText id="lastname" @bind-Value="Teacher.last_name" class="form-control" /> 
                <ValidationMessage For="() => Teacher.last_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="firstname" class="form-label">FirstName:</label> 
                <InputText id="firstname" @bind-Value="Teacher.first_name" class="form-control" /> 
                <ValidationMessage For="() => Teacher.first_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="middlename" class="form-label">MiddleName:</label> 
                <InputText id="middlename" @bind-Value="Teacher.middle_name" class="form-control" /> 
                <ValidationMessage For="() => Teacher.middle_name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="birthdate" class="form-label">BirthDate:</label> 
                <InputDate id="birthdate" @bind-Value="Teacher.birth_date" class="form-control" /> 
                <ValidationMessage For="() => Teacher.birth_date" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/teachers">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Teacher Teacher { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddTeacher()
    {
        using var context = DbFactory.CreateDbContext();
        context.Teachers.Add(Teacher);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/teachers");
    }
}
