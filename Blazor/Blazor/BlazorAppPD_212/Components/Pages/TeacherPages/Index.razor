@page "/teachers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorPD_321.Models
@using BlazorAppPD_212.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BlazorAppPD_212.Data.BlazorAppPD_212Context> DbFactory
@rendermode InteractiveServer

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="teachers/create">Create New</a>
</p>

<QuickGrid Class="table" Items="FilteredTeachers">
    <PropertyColumn Property="teacher => teacher.teacher_id" Sortable="true" Title="ID" />
    <PropertyColumn Property="teacher => teacher.last_name" Sortable="true" Title="Фамилия">
        <ColumnOptions>
            <div>
                <input type="search" @bind="lastNameFilter" @bind:event="oninput"/>
            </div>
        </ColumnOptions>
        </PropertyColumn>
    <PropertyColumn Property="teacher => teacher.first_name" Sortable="true" Title="Имя">
        <ColumnOptions>
            <div>
                <input type="search" @bind="firstNameFilter" @bind:event="oninput" />
            </div>
        </ColumnOptions>
    </PropertyColumn> />
    <PropertyColumn Property="teacher => teacher.middle_name" Sortable="true" Title="Отчество">
        <ColumnOptions>
            <div>
                <input type="search" @bind="middleNameFilter" @bind:event="oninput" />
            </div>
        </ColumnOptions>
    </PropertyColumn>
    <PropertyColumn Property="teacher => teacher.birth_date" Sortable="true" Title="Дата рождения" />
    <PropertyColumn Property="teacher => teacher.work_since" Sortable="true" Title="Начало работы" />

    <TemplateColumn Context="teacher">
        <a href="@($"teachers/edit?id={teacher.teacher_id}")">Edit</a> |
        <a href="@($"teachers/details?id={teacher.teacher_id}")">Details</a> |
        <a href="@($"teachers/delete?id={teacher.teacher_id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    string lastNameFilter = "";
    string firstNameFilter = "";
    string middleNameFilter = "";
    IQueryable<Teacher> FilteredTeachers => context.Teachers.Where(t => (t.last_name.Contains(lastNameFilter) && t.first_name.Contains(firstNameFilter) && t.middle_name.Contains(middleNameFilter)));
    private BlazorAppPD_212Context context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
